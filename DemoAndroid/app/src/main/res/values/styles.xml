<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <!-- Base application theme. -->
    <style name="AppThemes" parent="AppTheme.Base">
        <!-- Customize your theme here. -->
        <!--<item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>-->
        <!--RecyclerView的分线的样式-->
        <item name="android:listDivider">@drawable/recyclerview_divider</item>
    </style>

    <!--ToolBar的样式-->
    <style name="AppTheme.Base" parent="Theme.AppCompat.Light">
        <!--将ActionBar隐藏,这里使用ToolBar-->
        <item name="windowActionBar">false</item>
        <!-- 使用 API Level 22以上编译的话，要拿掉前綴字 -->
        <item name="windowNoTitle">true</item>
        <!--colorPrimaryDark对应状态栏的颜色-->
        <item name="colorPrimaryDark">@color/statusColor</item>
        <!--colorPrimary 对应ToolBar的颜色-->
        <item name="colorPrimary">@color/toolBarColor</item>
        <!--colorAccent 对应EditText编辑时、RadioButton选中、CheckBox等选中时的颜色。-->
        <item name="colorAccent">@color/editColor</item>
        <!--窗口的颜色-->
        <item name="android:windowBackground">@color/widowColor</item>
    </style>

    <!--主界面底部按钮样式-->
    <style name="bottom_style">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_gravity">center_vertical</item>
        <item name="android:layout_weight">1</item>
        <item name="android:button">@null</item>
        <item name="android:drawablePadding">5dp</item>
        <item name="android:gravity">center</item>
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@drawable/bottom_text_selector</item>
        <item name="android:background">@android:color/transparent</item>
    </style>

    <!-- 自定义loading动画 -->
    <style name="custom_dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <!-- Dialog的windowFrame框为无 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 是否漂现在activity上 -->
        <item name="android:windowIsTranslucent">true</item>
        <!-- 是否半透明 -->
        <item name="android:windowNoTitle">true</item>
        <item name="android:background">@android:color/transparent</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
        <!-- 去除黑色边框的关键设置项 -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- 屏幕背景是否变暗 -->
        <item name="android:backgroundDimAmount">0.6</item>
    </style>

    <!-- 分割线 -->
    <style name="spaceLine">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">@dimen/line_height</item>
        <item name="android:background">@color/line_color</item>
    </style>

    // ---------------------------新的-----------------------------------------

    <!-- Base application theme. -->
    <style name="AppTheme1" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppTheme.NoActionBar" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    // ----------------------------------------------------------------------

    <!--ToolBar的menu的样式-->
    <style name="Theme.ToolBar.Menu" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- 设置-弹窗的背景-颜色-->
        <item name="android:colorBackground">@color/menu_bg</item>
        <!-- 字体的颜色-->
        <item name="android:textColor">@color/white</item>
        <!-- 字体大小-->
        <item name="android:textSize">14sp</item>
        <!-- 用于替换菜单的三个小白点，换成自已的图片-->
        <item name="actionOverflowButtonStyle">@style/ActionButton.Overflow.Menu</item>
        <!--用于控制menu弹出的位置，位于toolbar的下面，而不是上面-->
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
        <!-- 用于修改item默认的分割线-->
        <item name="android:dropDownListViewStyle">@style/dropDownStyle</item>
        <item name="dropDownListViewStyle">@style/dropDownStyle</item>
        <!-- 用于控件popmenu的宽度-->
        <item name="android:width">10dp</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">0dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0dp</item>

        <item name="android:gradientRadius">15dp</item>
        <item name="android:radius">50dp</item>
        <item name="android:dropDownWidth">10dp</item>
        <item name="android:paddingRight">0dp</item>
    </style>

    <!--自定义右边的三个点-->
    <style name="ActionButton.Overflow.Menu" parent="android:style/Widget.Holo.Light.ActionButton.Overflow">
        <item name="android:src">@mipmap/icon_plus</item>
    </style>

    <!--把该属性改为false即可使menu位置位于toolbar之下-->
    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <item name="overlapAnchor">false</item>
    </style>

    <!--分割线-->
    <style name="dropDownStyle" parent="android:style/Widget.Holo.ListView.DropDown">
        <!--<item name="android:listSelector">可添加选中背景颜色</item>-->
        <item name="android:divider">#908d8d8d</item>
        <item name="android:dividerHeight">0.5dp</item>
    </style>

    // ---------------------------------------------------------------------------------

    <style name="DialogTheme" parent="@android:style/Theme.Dialog">
        <!-- 边框 -->
        <item name="android:windowFrame">@null</item>
        <!-- 是否浮现在activity之上 -->
        <item name="android:windowIsFloating">true</item>
        <!--window Is Translucent 窗口是半透明的-->
        <item name="android:windowIsTranslucent">false</item>
        <!--window No Title窗口无标题-->
        <item name="android:windowNoTitle">true</item>
        <!--背景色,此处的背景色请一定要设置为透明度背景色-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 模糊 -->
        <item name="android:backgroundDimEnabled">false</item>
        <!--设置动画，在这里使用让它继承系统的Animation.Dialog-->
        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
    </style>






    <!-- Base application theme. -->
    <style name="AppTheme11" parent="Theme.AppCompat">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
    </style>
    <style name="ToolBarTitleText" parent="TextAppearance.AppCompat.Medium">
        <item name="android:textColor">#ffffffff</item>
        <item name="android:textSize">16sp</item>
        <item name="android:textStyle">bold</item>

    </style>

    <style name="transparentText" parent="TextAppearance.AppCompat.Small">
        <item name="android:textColor">#00000000</item>

    </style>

</resources>
