apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.wecome.demo"
        // applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        // 清除未使用的资源
        // resConfigs "en", "fr"
        // resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"
        // 过滤Native库
        // ndk {
        //     abiFilters "armeabi-v7a", "x86"
        // }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    /*
    * 想要用命令行打包，就必须有签名配置
    */
    // 签名配置(用命令打包）
    signingConfigs {
        release {
            storeFile file("keystore/bdmobile.keystore")
            storePassword "baidu2010"
            keyAlias "bdmobile.keystore"
            keyPassword "baidu2010"
        }

        debug {
            storeFile file("keystore/bdmobile.keystore")
            storePassword "baidu2010"
            keyAlias "bdmobile.keystore"
            keyPassword "baidu2010"
        }
    }

    buildTypes {
        release {
            // 是否混淆
            minifyEnabled false
            // 清除未使用的资源
            // shrinkResources true
            // Zipalign优化
            // zipAlignEnabled true
            // 是否输出日志
            // buildConfigField 'boolean', 'IS_DEBUG', 'false'
            // 混淆文件配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 引用release签名配置
            signingConfig signingConfigs.release
        }
        debug {
            // 改包名
            applicationIdSuffix ".screen"
            // 是否混淆
            minifyEnabled false
            // 清除未使用的资源
            // shrinkResources false
            // Zipalign优化
            // zipAlignEnabled false
            // 是否输出日志
            // buildConfigField 'boolean', 'IS_DEBUG', 'true'
            // 混淆文件配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 引用debug签名配置
            signingConfig signingConfigs.debug
        }
    }

    /*
   * AS2.0的配置就没有flavorDimensions ("default")
   * 且每个渠道中也没必要有dimension "default"
   */
    // start--多渠道(AS3.0以上的配置方式)
    flavorDimensions("default")

    productFlavors {
        pub {
            dimension "default"
        }
        huawei {
            dimension "default"
        }
        xiaomi {
            dimension "default"
        }
        vivo {
            dimension "default"
        }
        oppo {
            dimension "default"
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    // 自定义apk名称（AS 2.x 的的配置方式）
    // applicationVariants.all { variant ->
    //     variant.outputs.each { output ->
    //         def outputFile = output.outputFile
    //         if (outputFile != null && outputFile.name.endsWith('.apk')) {
    //             def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
    //             output.outputFile = new File(outputFile.parent, fileName)
    //         }
    //     }
    // }

    // 自定义apk名称（AS 3.x 的的配置方式）
    applicationVariants.all { variant ->
        variant.outputs.all { output ->// each 改为 all
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd')
            def productName = "Demo"
            def build = "build1000"
            def fileName = "${productName}_v${variant.versionName}.${variant.versionCode}" +
                    "_${variant.variantData.variantConfiguration.buildType.name}" +
                    "_${variant.productFlavors[0].name}_${build}_${formattedDate}.apk"
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }
        }
    }
    // end--多渠道

    // 打出支持x86、armeabi-v7a、x86_64等cpu架构的包
    // splits {
    //     abi {
    //         enable true
    //         reset()
    //         include 'x86','armeabi-v7a','x86_64'
    //         universalApk true
    //     }
    // }

    // 创建assets目录
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    implementation rootProject.ext.dependencies["foundation-page-stack"]
    implementation rootProject.ext.dependencies["foundation-map-webview"]
}
